{
  "openapi": "3.0.1",
  "info": {
    "title": "AuthServer API",
    "description": "A comprehensive authentication server API built with Clean Architecture principles",
    "contact": {
      "name": "Example Auth",
      "email": "brian861105@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "v1.0"
  },
  "paths": {
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "Creates a new user account with email and password. Returns JWT token upon successful registration.",
        "operationId": "RegisterUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticate user",
        "description": "Authenticates a user with email and password. Returns JWT token upon successful authentication.",
        "operationId": "LoginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/Auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request password reset",
        "description": "Initiates password reset process for the specified email. Always returns success for security reasons (even if email doesn't exist).",
        "operationId": "ForgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset request processed"
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/Auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "description": "Resets user password using a valid reset token obtained from forgot-password endpoint.",
        "operationId": "ResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired reset token"
          }
        }
      }
    },
    "/api/Auth/validate-token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Validate JWT token",
        "description": "Validates the provided JWT token and returns user information if valid. Requires Bearer authentication.",
        "operationId": "ValidateToken",
        "responses": {
          "200": {
            "description": "Token is valid"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT Bearer token for authentication",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Authentication response containing JWT token"
      },
      "ForgotPasswordRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Email address to send password reset link",
            "format": "email"
          }
        },
        "additionalProperties": false,
        "description": "Forgot password request"
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Registered email address",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "User password"
          }
        },
        "additionalProperties": false,
        "description": "User login request"
      },
      "RegisterRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Valid email address",
            "format": "email"
          },
          "password": {
            "minLength": 8,
            "type": "string",
            "description": "Strong password (minimum 8 characters)"
          }
        },
        "additionalProperties": false,
        "description": "User registration request"
      },
      "ResetPasswordRequest": {
        "required": [
          "newPassword",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string",
            "description": "Password reset token received via email"
          },
          "newPassword": {
            "minLength": 8,
            "type": "string",
            "description": "New password (minimum 8 characters)"
          }
        },
        "additionalProperties": false,
        "description": "Reset password request"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter 'Bearer' followed by a space and your JWT token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication operations including user registration, login, and password management"
    }
  ]
}